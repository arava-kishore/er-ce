{{ if .Values.plgx.fileserver.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "polylogyx.fullname" . }}-fileserver
  labels: {{- include "polylogyx.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ template "polylogyx.fullname" . }}-fileserver
spec:
  replicas: {{ .Values.plgx.fileserver.replicas }}
  selector:
    matchLabels: {{- include "polylogyx.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ template "polylogyx.fullname" . }}-fileserver
  strategy: {{- toYaml .Values.plgx.fileserver.updateStrategy | nindent 4 }}
  template:
    metadata:
      {{ if .Values.plgx.fileserver.podAnnotations }}
      annotations: {{- toYaml .Values.plgx.fileserver.podAnnotations | nindent 8 }}
      {{ end }}
      labels: {{- include "polylogyx.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: {{ template "polylogyx.fullname" . }}-fileserver
    spec:
      {{- if .Values.plgx.fileserver.pullSecrets }}
      imagePullSecrets: {{- toYaml .Values.plgx.fileserver.pullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ template "polylogyx.fullname" . }}-fileserver
          image: {{ template "polylogyx.images.fileserver" . }}
          imagePullPolicy: {{ .Values.plgx.fileserver.pullPolicy | quote }}
          ports:
            - containerPort: 80
          {{- if .Values.plgx.fileserver.livenessProbe }}
          livenessProbe: {{- toYaml .Values.plgx.fileserver.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.plgx.fileserver.readinessProbe }}
          readinessProbe: {{- toYaml .Values.plgx.fileserver.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.plgx.fileserver.resources }}
          resources: {{- toYaml .Values.plgx.fileserver.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: yara
              mountPath: /resources/yara
            - name: osqueryflags
              mountPath: /app/flags
            - name: certificate
              mountPath: /certificate
              readOnly: true
      restartPolicy: Always
      {{ if .Values.plgx.fileserver.nodeSelector }}
      nodeSelector: {{ toYaml .Values.plgx.fileserver.nodeSelector | nindent 8 }}
      {{ end }}
      {{ if .Values.plgx.fileserver.tolerations }}
      tolerations: {{ toYaml .Values.plgx.fileserver.tolerations | nindent 8 }}
      {{ end }}
      {{ if .Values.plgx.fileserver.affinity }}
      affinity: {{ toYaml .Values.plgx.fileserver.affinity | nindent 8 }}
      {{ end }}
      volumes:
        - name: yara
          {{ if .Values.plgx.persistence.yara.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "polylogyx.yara.pvcName" . }}
          {{ else }}
            emptyDir: {}
          {{ end }}
        - name: osqueryflags
          configMap:
            name: {{ template "polylogyx.fullname" . }}-fileserver-configmap
            items:
              - key: darwin.osquery.flags
                path: darwin/osquery.flags
              - key: freebsd.osquery.flags
                path: freebsd/osquery.flags
              - key: linux.x64.osquery.flags
                path: linux/x64/osquery.flags
              - key: windows.x64.osquery.flags
                path: windows/x64/osquery.flags
              - key: windows.x86.osquery.flags
                path: windows/x86/osquery.flags
        - name: certificate
          secret:
            secretName: {{ .Values.plgx.ingress.tls.secretName }}
{{ end }}